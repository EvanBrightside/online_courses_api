---
openapi: 3.0.0
info:
  title: API V1
  version: v1
paths:
  "/api/v1/authors":
    get:
      summary: list authors
      tags:
      - Authors
      responses:
        '200':
          description: successful
    post:
      summary: create author
      tags:
      - Authors
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/authors/{id}":
    get:
      summary: show author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        description: Author ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    put:
      summary: update author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        description: Author ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        description: Author ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
  "/api/v1/competencies":
    get:
      summary: list competencies
      tags:
      - Competencies
      responses:
        '200':
          description: successful
    post:
      summary: create competency
      tags:
      - Competencies
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/competencies/{id}":
    get:
      summary: show competency
      tags:
      - Competencies
      parameters:
      - name: id
        in: path
        description: Competency ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    put:
      summary: update competency
      tags:
      - Competencies
      parameters:
      - name: id
        in: path
        description: Competency ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete competency
      tags:
      - Competencies
      parameters:
      - name: id
        in: path
        description: Competency ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: no content
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - description
              - author_id
  "/api/v1/courses/{id}":
    get:
      summary: show course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        description: Course ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    put:
      summary: update course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        description: Course ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - description
              - author_id
    delete:
      summary: delete course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        description: Course ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
